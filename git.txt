// Konfiguracja użytkownika Gita
git config --global user.name "Maciej Miarka"
git config --global user.email "mmiarka.pl@gmail.com"

// Inicjalizacja repozytorium
git init

// Dodaje do indeksu wszystkie nowe zmienne, usuniete pliki w bierzacym jego katalogu i wszystkich jego podkatalogach
git add .

// Dodaje do indeksu wszystkie nowe, zmienne, usuniete pliki w całym repozytorium
git add -A

// Zatwierdza zmiany opisane wiadomością "Pierwszy commit"
git commit -m "Pierwszy commit"

// Zmienia nazwę bieżącej gałęzi na "main". Flaga -M nadpisuje gałąź o nazwie main
git branch -M main

//Dodaje zdalne repozytorium o nazwie "origin" (nazwa jest dowolna) z adresem URL. Projekt może mieć wiecej niż 1 repozytorium.
git remote add origin https://github.com/maciek1989pl/FD_Maciej_Miarka.git

// Polecenie do przesyłania/wypychania zmian na zdalny branch main
git push origin main

// Tworzenie nowego brancha i zmiana na niego
git checkout -b nazwa_brancha

// Sprawdzanie jakie sa zdalne repozytoria wraz z adresami
git remote -v

// Pobranie zmian z brancha nazwa_brancha
git pull origin nazwa_brancha

// Polecenie do generowania klucza SSH
ssh keygen

// Zmiana adresu URL repozytorium
git remote set-url origin new_URL
np. git remote set-url git@github.com:maciek1989pl/FD_Maciej_Miarka.git (SSH)

// Tworzenie nowego brancha (ale nie przełącza się na nią)
git branch nazwa_brancha

// Połączenie znian z gałęzi lokalnej do main, który również jest zdalny
git merge nazwa_brancha

// Cofanie kilku commitów
git revert stary_hash^..nowy_hash
np. git revert 0e74427862850bf2deae4a2ffd9ba7212a29d75d^..a625bc13fe8300ce52bfe309fcdcd89c3562d8b7

   Dodanie flagi --hard (przywróci stan repozytorium do "momentu" wskazanego commita, ale przy tym usunie historię)
git revert --hard HASH
np. git revert --hard 0e74427862850bf2deae4a2ffd9ba7212a29d75d

// Jeśli masz w trakcie jakieś niezakomitowane zmiany i chcesz je tymczasowo schować 
git stash 

   Aby zobaczyć listę wszystkich zapisanych zmian
git stash list

   Jeśli chcesz przywrócić zmiany z ostatniego schowka
git stash apply

   Aby przywrócić zmiany z komkretnego schowka
git stash apply stash@{n}

   Jeśli chcesz przywrócić konkretny schowek
git stash pop stash@{n}

   Jeśli chcesz usunąć konkretny schowek bez przywracania zmian
git stash drop stash@{n}

   Jeżeli chcesz wyczyścić całą listę schowków
git stash clear

   Jeżeli chcesz dodać krótki opis do Twojego schowka
git stash save "wiadomość"


